# Define the tesseract language
#
language: eng

# Where the receipts are stored
# Receipts should be simple text files
receipts_path: "../data/txt"

results_as_json: false

# Market names roughly ordered by likelihood.
# Can contain market locations for fuzzy parsing
markets:
  Colruyt:
    - colruyt
    - Colruyt
  Delhaize:
    - Delhaize
    - delhaize
  Penny:
    - penny markt
    - penny
    - p e n n y
    - m a r k t gmbh
  REWE:
    - rewe
  Real:
    - real
  Netto:
    - netto-online
  Kaiser's:
    - kaiser
    - kaiserswerther straße 270
  Aldi:
    - aldi
    - friedrichstr 128—133
  Lidl:
    - lidl
  Edeka:
    - edeka
  Drogerie:
    - drogerie
  Kodi:
    - kodi
  Getraenke:
    - Getraenke Tempel
  Tanken:
    - shell
    - esso station
    - aral
    - total tankstelle
    - RK Tankstellen
  Migros:
    - genossenschaft migros
  Metro:
    - vetro
    - metro

# Sum keys roughly ordered by likelyhood.
sum_keys:
  - summe
  - summe eur
  - gesamtbetrag
  - gesantbetrag
  - gesamt
  - total
  - sum
  - zwischensumme
  - bar
  - te betalen
  - rockgeld
  - rusckgeld
  - rückgeld

ignore_keys:
  - mwst
  - kg x
  - stkx
  - stk
  - zw-summe

sum_format: '\d+(\.\s?|,\s?|[^a-zA-Z\d])\d{2}'

item_format: '([a-zA-Z].+)\s(-|)((\d|\d{2}),(\d{2}|\d{3}))\s'
item_format_metro: '[0-9]\s(.*?)\d.()((\d|\d{2})(\,|\.)\d{1,2})\s([A|a]|[B|b])'

# Matches dates like 19.08.15 and 19.08.2015
date_format: '((\d{2}\.\d{2}\.\d{2,4})|(\d{2,4}\/\d{2}\/\d{2})|(\d{2}\/\d{2}\/\d{4}))'
